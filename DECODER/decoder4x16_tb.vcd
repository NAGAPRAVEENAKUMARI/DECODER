$date
	Wed May 14 07:00:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module decoder4x16_tb $end
$var wire 16 ! out [15:0] $end
$var reg 1 " enable $end
$var integer 32 # i [31:0] $end
$var reg 4 $ in [3:0] $end
$scope module dut $end
$var wire 1 % enable $end
$var wire 1 & enable_high $end
$var wire 1 ' enable_low $end
$var wire 4 ( in [3:0] $end
$var wire 16 ) out [15:0] $end
$scope module d1 $end
$var wire 1 ' enable $end
$var wire 3 * in [2:0] $end
$var reg 8 + out [7:0] $end
$upscope $end
$scope module d2 $end
$var wire 1 & enable $end
$var wire 3 , in [2:0] $end
$var reg 8 - out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
b0 ,
b1 +
b0 *
b1 )
b0 (
1'
0&
1%
b0 $
b0 #
1"
b1 !
$end
#5
b10 +
b10 !
b10 )
b1 *
b1 ,
b1 $
b1 (
b1 #
#10
b100 +
b100 !
b100 )
b10 *
b10 ,
b10 $
b10 (
b10 #
#15
b1000 +
b1000 !
b1000 )
b11 *
b11 ,
b11 $
b11 (
b11 #
#20
b10000 +
b10000 !
b10000 )
b100 *
b100 ,
b100 $
b100 (
b100 #
#25
b100000 +
b100000 !
b100000 )
b101 *
b101 ,
b101 $
b101 (
b101 #
#30
b1000000 +
b1000000 !
b1000000 )
b110 *
b110 ,
b110 $
b110 (
b110 #
#35
b10000000 +
b10000000 !
b10000000 )
b111 *
b111 ,
b111 $
b111 (
b111 #
#40
0'
b1 -
1&
b0 +
b100000000 !
b100000000 )
b0 *
b0 ,
b1000 $
b1000 (
b1000 #
#45
b10 -
b1000000000 !
b1000000000 )
b1 *
b1 ,
b1001 $
b1001 (
b1001 #
#50
b100 -
b10000000000 !
b10000000000 )
b10 *
b10 ,
b1010 $
b1010 (
b1010 #
#55
b1000 -
b100000000000 !
b100000000000 )
b11 *
b11 ,
b1011 $
b1011 (
b1011 #
#60
b10000 -
b1000000000000 !
b1000000000000 )
b100 *
b100 ,
b1100 $
b1100 (
b1100 #
#65
b100000 -
b10000000000000 !
b10000000000000 )
b101 *
b101 ,
b1101 $
b1101 (
b1101 #
#70
b1000000 -
b100000000000000 !
b100000000000000 )
b110 *
b110 ,
b1110 $
b1110 (
b1110 #
#75
b10000000 -
b1000000000000000 !
b1000000000000000 )
b111 *
b111 ,
b1111 $
b1111 (
b1111 #
#80
b0 -
b0 !
b0 )
b10 *
b10 ,
0&
b1010 $
b1010 (
0"
0%
b10000 #
#85
